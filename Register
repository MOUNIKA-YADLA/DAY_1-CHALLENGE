package com.knpp.bb.primeservices.webcontroller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class UserController {
    @Autowired
    private UserService userService;
    @Autowired
    private SecurityService securityService;
    @Autowired
    private UserValidator userValidator;

    @GetMapping("/registration")
    public String registration(Model model) {
        if (securityService.isAuthenticated()) {
            return "redirect:/";
        }
        model.addAttribute("userForm", new User());
        return "registration";
    }

    @PostMapping("/registration")
    public String registration(
            @ModelAttribute("userForm") User userForm,
            BindingResult bindingResult,
            RedirectAttributes redirectAttributes) {
        
        userValidator.validate(userForm, bindingResult);

        if (bindingResult.hasErrors()) {
            return "registration";
        }
        
        try {
            userService.save(userForm);
            redirectAttributes.addFlashAttribute("message", 
                "Registered successfully, please login.");
            return "redirect:/login";
            
        } catch (Exception e) {
            bindingResult.reject("registrationError",
                "Registration failed: " + e.getMessage());
            return "registration";
        }
    }

    @GetMapping("/login")
    public String login(Model model,
                      @RequestParam(value = "error", required = false) String error,
                      @RequestParam(value = "logout", required = false) String logout) {
        if (securityService.isAuthenticated()) {
            return "redirect:/";
        }
        if (error != null)
            model.addAttribute("error", "Your username and password is invalid.");
        if (logout != null)
            model.addAttribute("message", "You have been logged out successfully.");
        return "login";
    }

    @GetMapping({"/", "/welcome"})
    public String welcome(Model model) {
        return "welcome";
    }
}




<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>Create an account | Bank Account Management</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
<div class="container mt-5">
    <div class="registration-card">
        <!-- Success Message -->
        <div th:if="${message}" class="alert alert-success" role="alert">
            <span th:text="${message}"></span>
        </div>

        <form method="POST" class="form-signin" th:object="${userForm}" th:action="@{/registration}">
            <div class="form-group">
                <input type="text" th:field="*{username}" class="form-control" placeholder="Username" required autofocus>
                <span class="text-danger" th:if="${#fields.hasErrors('username')}" th:errors="*{username}"></span>
            </div>

            <div class="form-group">
                <input type="password" th:field="*{password}" class="form-control" placeholder="Password" required>
                <span class="text-danger" th:if="${#fields.hasErrors('password')}" th:errors="*{password}"></span>
            </div>

            <div class="form-group">
                <input type="password" th:field="*{passwordConfirm}" class="form-control" placeholder="Confirm Password" required>
                <span class="text-danger" th:if="${#fields.hasErrors('passwordConfirm')}" th:errors="*{passwordConfirm}"></span>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
        </form>

        <div class="login-link mt-3">
            <span style="color: #B3B3B3;">Already have an account?</span> <a href="/login">Login here</a>
        </div>
    </div>
</div>
</body>
</html>
